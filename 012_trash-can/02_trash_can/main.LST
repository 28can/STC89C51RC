C51 COMPILER V9.52.0.0   MAIN                                                              02/15/2024 11:58:33 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: D:\app\keil 5\keil_v4\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include "reg52.h"//选择Inter 8052编译
   2          #include "intrins.h"//_nop_
   3          //*LED引脚定义*/
   4          sbit ledOne    = P3^7;
   5          sbit ledTwo    = P3^6;
   6          /*测距模块引脚定义*/
   7          sbit Echo      = P1^6;
   8          sbit Trig      = P1^5;
   9          /*舵机引脚定义*/
  10          sbit sg90_con  = P1^1;
  11          /*按键*/
  12          sbit SW1       = P2^1;
  13          /*振动传感器*/
  14          sbit vibrate   = P3^2;
  15          /*蜂鸣器引脚*/
  16          sbit beep       =P2^0;
  17          int jd;//角度
  18          char jd_back;//记录上一次角度
  19          int cnt             = 0;//爆表计数
  20          char mark_vibrate   = 0;//震动传感器标志位
  21          /*延迟150毫秒*/
  22          void Delay150ms()               //@11.0592MHz
  23          {
  24   1              unsigned char i, j, k;
  25   1      
  26   1              _nop_();
  27   1              i = 2;
  28   1              j = 13;
  29   1              k = 237;
  30   1              do
  31   1              {
  32   2                      do
  33   2                      {
  34   3                              while (--k);
  35   3                      } while (--j);
  36   2              } while (--i);
  37   1      }
  38          /*延迟两秒*/
  39          void Delay2000ms()              //@11.0592MHz
  40          {
  41   1              unsigned char i, j, k;
  42   1      
  43   1              i = 15;
  44   1              j = 2;
  45   1              k = 235;
  46   1              do
  47   1              {
  48   2                      do
  49   2                      {
  50   3                              while (--k);
  51   3                      } while (--j);
  52   2              } while (--i);
  53   1      }
  54          /*延迟300ms*/
  55          void Delay300ms()               //@11.0592MHz
C51 COMPILER V9.52.0.0   MAIN                                                              02/15/2024 11:58:33 PAGE 2   

  56          {
  57   1              unsigned char i, j, k;
  58   1      
  59   1              i = 3;
  60   1              j = 26;
  61   1              k = 223;
  62   1              do
  63   1              {
  64   2                      do
  65   2                      {
  66   3                              while (--k);
  67   3                      } while (--j);
  68   2              } while (--i);
  69   1      }
  70          
  71          /*延迟10ms*/
  72          void Delay10ms()                //@11.0592MHz
  73          {
  74   1              unsigned char i, j;
  75   1      
  76   1              i = 18;
  77   1              j = 235;
  78   1              do
  79   1              {
  80   2                      while (--j);
  81   2              } while (--i);
  82   1      }
  83          
  84          /*定时器0初始化*/
  85          void Time0Init()
  86          {
  87   1              //1. 配置定时器0工作模式位16位计时
  88   1              TMOD &= 0xF0;                   //设置定时器模式
  89   1              TMOD |= 0x01;                   //设置定时器模式
  90   1              //2. 给初值，定一个0.5出来
  91   1              TL0=0x33;
  92   1              TH0=0xFE;
  93   1              //3. 开始计时
  94   1              TR0 = 1;
  95   1              TF0 = 0;
  96   1              //4. 打开定时器0中断
  97   1              ET0 = 1;
  98   1              //5. 打开总中断EA
  99   1              EA = 1;
 100   1      }
 101          /*定时器1初始化*/
 102          void Time1Init(){
 103   1              TMOD &= 0x0F;                   //设置定时器模式
 104   1              TMOD |= 0x10;                   //设置定时器模式
 105   1              TL1 = 0x00;                             //设置定时初始值
 106   1              TH1 = 0x00;                             //设置定时初始值
 107   1      }
 108          /*开始测距*/
 109          void StartHC(){
 110   1              Trig=0;
 111   1              Trig=1;
 112   1              Delay10ms();
 113   1              Trig=0;
 114   1      }
 115          /*测距*/
 116          double get_distance(){
 117   1              double time;
C51 COMPILER V9.52.0.0   MAIN                                                              02/15/2024 11:58:33 PAGE 3   

 118   1              //定时器清零
 119   1              TL1 = 0x00;                             //设置定时初始值
 120   1              TH1 = 0x00;
 121   1              StartHC();
 122   1              while(Echo==0);//波出去
 123   1              TR1=1;//启动定时器计时
 124   1              while(Echo==1);//波回来
 125   1              TR1=0;//停止计时
 126   1              time=(TH1*256+TL1)*1.085;//us
 127   1              return (time*0.034/2);//0.034cm/us:速度
 128   1      }
 129          /*角度初始位*/
 130          void initSG90_0(){
 131   1              jd       = 1;
 132   1              cnt      = 0;
 133   1              sg90_con = 1;
 134   1              
 135   1      }
 136          /*开盖*/
 137          void OpenDusbin(){
 138   1              char n;
 139   1              jd    = 3; //90度 1.5ms高电平
 140   1              if(jd_back !=jd){
 141   2                      cnt   = 0; 
 142   2                      beep  = 0;
 143   2                      for (n=0; n< 2; n++){
 144   3                              Delay150ms();
 145   3                      }
 146   2                      beep  = 1;
 147   2                      Delay2000ms();
 148   2              }
 149   1              jd_back = jd;
 150   1      }
 151          /*关盖*/
 152          void OffDusbin(){
 153   1              jd = 1; //0度
 154   1              jd_back = jd;
 155   1              cnt = 0;
 156   1              Delay150ms();
 157   1      }
 158          /*开灯*/
 159          void OpenStatusLight(){
 160   1              ledOne=0;
 161   1              ledTwo=1;
 162   1      }
 163          /*关灯*/
 164          void OffStatusLight(){
 165   1              ledOne=1;
 166   1              ledTwo=0;
 167   1      }
 168          /*打开外部中断0*/
 169          void EX0_Init(){
 170   1              EX0 = 1;
 171   1              IT0 = 0;//低电平触发
 172   1      }
 173          void main()
 174          {
 175   1              double distance;
 176   1              
 177   1              Time0Init();
 178   1              Time1Init();
 179   1              
C51 COMPILER V9.52.0.0   MAIN                                                              02/15/2024 11:58:33 PAGE 4   

 180   1              EX0_Init();
 181   1              initSG90_0();
 182   1              while(1){
 183   2                      distance=get_distance();
 184   2                      if(distance<10 || SW1==0 || mark_vibrate==1){
 185   3                              OpenStatusLight();
 186   3                              OpenDusbin();
 187   3                              mark_vibrate = 0;
 188   3                      }else{
 189   3                              OffStatusLight();
 190   3                              OffDusbin();
 191   3                      }
 192   2              }
 193   1      }
 194          
 195          
 196          /*定时器0中断*/
 197          void Time0Handler() interrupt 1
 198          {
 199   1              cnt++;  //统计爆表的次数. cnt=1的时候，报表了1
 200   1              //重新给初值
 201   1              TL0=0x33;
 202   1              TH0=0xFE;
 203   1              //控制PWM波
 204   1              if(cnt < jd){
 205   2                      sg90_con = 1;
 206   2              }else{
 207   2                      sg90_con = 0;
 208   2              }
 209   1              /*周期*/
 210   1              if(cnt == 40){//爆表40次，经过了20ms
 211   2                      cnt = 0;  //当100次表示1s，重新让cnt从0开始，计算下一次的1s
 212   2                      sg90_con = 1;//重回高电平
 213   2              }
 214   1                      
 215   1      }
 216          /**/
 217          void EX0_Handler() interrupt 0
 218          {
 219   1              mark_vibrate  =1;
 220   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    410    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
